name: C++ CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ make sqlite3 libsqlite3-dev clang-format libgtest-dev

    - name: Build project
      run: make
        
    - name: Check code style
      run: make check-style

    - name: Run tests
      run: make test

    - name: Generate coverage report
      run: |
        make clean
        make gcov_report
        echo "Coverage report available in report/coverage/index.html"

  clang-format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check formatting
        run: |
          find $(SRC_DIR) include tests -name '*.hpp' -o -name '*.cpp' -exec clang-format --dry-run --Werror {} \;